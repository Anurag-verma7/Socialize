{"ast":null,"code":"var _jsxFileName = \"D:\\\\sapp\\\\client\\\\src\\\\slides\\\\Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../App';\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  useEffect(() => {\n    fetch('/getposts', {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      setData(result.posts);\n    });\n  }, []);\n\n  const likepost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(item => {\n        if (item._id == result._id) return result;else return item;\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const comment = (text, postId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: postId,\n        text: text\n      })\n    });\n  };\n\n  const unlikepost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(item => {\n        if (item._id == result._id) return result;else return item;\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deletepost = postid => {\n    fetch(`/deletepost/${postid}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homepage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, data.map(x => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      key: x.id,\n      style: {\n        maxWidth: \"600px\",\n        height: \"max-content\",\n        margin: \"15px auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, x.postedBy.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: x.photo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, x.likes.includes(state._id) ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      onClick: () => {\n        unlikepost(x._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, \"thumb_down\") : /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      onClick: () => {\n        likepost(x._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, \"thumb_up\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, x.likes.length, \" likes\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 38\n      }\n    }, x.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 38\n      }\n    }, x.body)));\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/sapp/client/src/slides/Home.js"],"names":["React","useState","useEffect","useContext","UserContext","Home","data","setData","state","dispatch","fetch","headers","localStorage","getItem","then","res","json","result","posts","likepost","id","method","body","JSON","stringify","postId","newData","map","item","_id","catch","err","console","log","comment","text","unlikepost","deletepost","postid","Authorization","x","maxWidth","height","margin","postedBy","name","photo","likes","includes","length","title"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useContext} from 'react';\r\nimport { UserContext } from '../App';\r\nconst Home = () => {\r\n    const [data,setData]=useState([]);\r\n    const {state,dispatch}=useContext(UserContext)\r\n    useEffect(()=>{\r\n        fetch('/getposts',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json()).then(result=>{\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n    const likepost=(id)=>{\r\n        fetch('/like',{\r\n            method :\"put\",\r\n            headers :{\r\n                \"Content-Type\" :\"application/json\",\r\n                \"Authorization\" :\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId : id,\r\n            })\r\n        }).then(res=>res.json()).then(result=>{\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id)\r\n                return result\r\n                else \r\n                return item\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const comment =(text,postId)=>{\r\n        fetch('/comment',{\r\n            method :\"put\",\r\n            headers :{\r\n                \"Content-Type\" :\"application/json\",\r\n                \"Authorization\" :\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId : postId,\r\n                text:text\r\n            })\r\n        })\r\n    }\r\n    const unlikepost=(id)=>{\r\n        fetch('/unlike',{\r\n            method :\"put\",\r\n            headers :{\r\n                \"Content-Type\" :\"application/json\",\r\n                \"Authorization\" :\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId : id,\r\n            })\r\n        }).then(res=>res.json()).then(result=>{\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id)\r\n                return result\r\n                else \r\n                return item\r\n            })\r\n            setData(newData)\r\n        \r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const deletepost =(postid)=>{\r\n          fetch(`/deletepost/${postid}`,{\r\n              method:\"delete\",\r\n              headers:{\r\n                  Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              }\r\n          }).then(res=>res.json()).then(result=>{\r\n              console.log(result)\r\n          })\r\n    }\r\n    return ( \r\n        <div className=\"homepage\" >\r\n            {\r\n                data.map(x=>{\r\n                    return(\r\n                        <div className=\"card\" key={x.id} style={{\r\n                            maxWidth:\"600px\",\r\n                            height:\"max-content\",\r\n                            margin:\"15px auto\"\r\n                        }}>\r\n                            <h4>{x.postedBy.name}</h4>\r\n                            <div className=\"card-image\">\r\n                                <img src={x.photo} />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                {x.likes.includes(state._id)\r\n                                ?\r\n                                   \r\n                                    <i className=\"material-icons\" onClick={()=>{unlikepost(x._id)}}>thumb_down</i>\r\n                                :\r\n                                    <i className=\"material-icons\" onClick={()=>{likepost(x._id)}}>thumb_up</i>\r\n                                }\r\n                                    <h6>{x.likes.length} likes</h6>\r\n                                     <h6>{x.title}</h6>\r\n                                     <p>{x.body}</p>\r\n                                     \r\n                            </div>\r\n                             \r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n         \r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;"]},"metadata":{},"sourceType":"module"}